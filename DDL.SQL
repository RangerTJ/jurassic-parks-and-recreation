-- Taylor Jordan and Nick Schmidt (Team 100: Jurassic Parks and Recreation)

-- Generate Tables - Hand-edited version of schema export from SQL Workbench 
-- MySQL Script generated by MySQL Workbench
-- Fri Apr 28 17:21:28 2023
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering
-- Edits: Updated FK cascading and changed to CREATE OR REPLACE TABLE / unnecessary tags / restructured unique / Indentation Formatting

-- -----------------------------------------------------
-- Table `Parks`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `Parks` (
  `idPark`              INT NOT NULL AUTO_INCREMENT,
  `parkName`            VARCHAR(255) NOT NULL UNIQUE,
  `parkDescription`     VARCHAR(8000) NOT NULL,
  `parkLocation`        VARCHAR(255) NOT NULL,
  PRIMARY KEY (`idPark`));


-- -----------------------------------------------------
-- Table `FacilityTypes`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `FacilityTypes` (
  `idFacilityType`      INT NOT NULL,
  `facTypeName`         VARCHAR(255) NOT NULL UNIQUE,
  `facTypeDescription`  VARCHAR(8000) NOT NULL,
  PRIMARY KEY (`idFacilityType`));


-- -----------------------------------------------------
-- Table `Habitats`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `Habitats` (
  `idHabitat`           INT NOT NULL,
  `habitatName`         VARCHAR(255) NOT NULL UNIQUE,
  `habitatDescription`  VARCHAR(8000) NOT NULL,
  `habitateSize`        TINYINT(3) NOT NULL,
  PRIMARY KEY (`idHabitat`));


-- -----------------------------------------------------
-- Table `Facilities`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `Facilities` (
  `idFacility`          INT NOT NULL AUTO_INCREMENT,
  `idPark`              INT NOT NULL,
  `idFacilityType`      INT NOT NULL,
  `idHabitat`           INT NULL,
  `facilityName`        VARCHAR(45) NOT NULL UNIQUE,
  `facilityDescription` VARCHAR(45) NOT NULL,
  `facilityLocation`    VARCHAR(45) NOT NULL,
  `isEnclosure`         TINYINT(1) NOT NULL,
  `securityRating`      TINYINT(10) NOT NULL,
  `facilityPhoto`       BLOB NULL,
  `facilityNote`        VARCHAR(8000) NULL,
  PRIMARY KEY (`idFacility`),
  CONSTRAINT `fk_Facilities_Parks1`
    FOREIGN KEY (`idPark`)
    REFERENCES `Parks` (`idPark`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Facilities_FacilityType1`
    FOREIGN KEY (`idFacilityType`)
    REFERENCES `FacilityTypes` (`idFacilityType`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Facilities_Habitats1`
    FOREIGN KEY (`idHabitat`)
    REFERENCES `Habitats` (`idHabitat`)
    ON DELETE SET NULL
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `Diets`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `Diets` (
  `idDiet`              INT NOT NULL AUTO_INCREMENT,
  `dietName`            VARCHAR(255) NOT NULL UNIQUE,
  `dietDescription`     VARCHAR(8000) NOT NULL,
  `dietIcon`            BLOB NULL,
  PRIMARY KEY (`idDiet`));


-- -----------------------------------------------------
-- Table `Species`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `Species` (
  `idSpecies`           INT NOT NULL AUTO_INCREMENT,
  `idDiet`              TINYINT(1) NOT NULL,
  `idHabitat`           INT NOT NULL,
  `speciesName`         VARCHAR(255) NOT NULL UNIQUE,
  `speciesDescription`  VARCHAR(8000) NOT NULL,
  `threatLevel`         TINYINT(10) NOT NULL,
  `speciesPhoto`        BLOB NULL,
  PRIMARY KEY (`idSpecies`),
  CONSTRAINT `fk_Species_Diets1`
    FOREIGN KEY (`idDiet`)
    REFERENCES `Diets` (`idDiet`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Species_Habitats1`
    FOREIGN KEY (`idHabitat`)
    REFERENCES `Habitats` (`idHabitat`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `BiologicalAssets`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `BiologicalAssets` (
  `idBiologicalAsset`   INT NOT NULL AUTO_INCREMENT,
  `idSpecies`           INT NOT NULL,
  `idFacility`          INT NOT NULL,
  `nickname`            VARCHAR(255) NULL UNIQUE,
  PRIMARY KEY (`idBiologicalAsset`),
  CONSTRAINT `fk_BiologicalAssets_Facilities1`
    FOREIGN KEY (`idFacility`)
    REFERENCES `Facilities` (`idFacility`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_BiologicalAssets_Species1`
    FOREIGN KEY (`idSpecies`)
    REFERENCES `Species` (`idSpecies`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `JobClassifications`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `JobClassifications` (
  `idJobClassification` INT NOT NULL AUTO_INCREMENT,
  `jobTitle`            VARCHAR(255) NOT NULL UNIQUE,
  `jobDescription`      VARCHAR(8000) NOT NULL,
  PRIMARY KEY (`idJobClassification`));


-- -----------------------------------------------------
-- Table `Employees`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `Employees` (
  `idEmployee`          INT NOT NULL AUTO_INCREMENT,
  `idJobClassification` INT NOT NULL,
  `firstName`           VARCHAR(45) NOT NULL,
  `lastName`            VARCHAR(45) NOT NULL,
  `hourlyWage`          DECIMAL(10,2) NOT NULL,
  `employeePhone`       VARCHAR(45) NOT NULL,
  `employeeEmail`       VARCHAR(255) NOT NULL,
  `employeeRadio`       VARCHAR(45) NULL,
  `employeeNote`        VARCHAR(8000) NULL,
  `employeePhoto`       BLOB NULL,
  PRIMARY KEY (`idEmployee`),
  CONSTRAINT `fk_Employees_JobClassifications1`
    FOREIGN KEY (`idJobClassification`)
    REFERENCES `JobClassifications` (`idJobClassification`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `TasksAssigned`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `TasksAssigned` (
  `idTaskAssigned`      INT NOT NULL AUTO_INCREMENT,
  `idFacility`          INT NOT NULL,
  `idBiologicalAsset`   INT NULL,
  `taskDescription`     VARCHAR(8000) NOT NULL,
  `taskStart`           DATETIME NOT NULL,
  `taskEnd`             DATETIME NULL,
  `taskIsComplete`      TINYINT(1) NULL,
  PRIMARY KEY (`idTaskAssigned`),
  CONSTRAINT `fk_Tasks_Facilities1`
    FOREIGN KEY (`idFacility`)
    REFERENCES `Facilities` (`idFacility`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_Tasks_BiologicalAssets1`
    FOREIGN KEY (`idBiologicalAsset`)
    REFERENCES `BiologicalAssets` (`idBiologicalAsset`)
    ON DELETE SET NULL
    ON UPDATE CASCADE);


-- -----------------------------------------------------
-- Table `EmployeeTasks`
-- -----------------------------------------------------
CREATE OR REPLACE TABLE `EmployeeTasks` (
  `idEmployeeTask`      INT NOT NULL AUTO_INCREMENT,
  `idTaskAssigned`      INT NOT NULL,
  `idEmployee`          INT NOT NULL,
  `taskHoursWorked`     INT NOT NULL,
  `empTaskCost`         DECIMAL(10,2) NOT NULL,
  `empTaskStart`        DATETIME NULL,
  `empTaskEnd`          DATETIME NULL,
  PRIMARY KEY (`idEmployeeTask`),
  CONSTRAINT `fk_TasksAssigned_has_Employees_TasksAssigned1`
    FOREIGN KEY (`idTaskAssigned`)
    REFERENCES `TasksAssigned` (`idTaskAssigned`)
    ON DELETE CASCADE
    ON UPDATE CASCADE,
  CONSTRAINT `fk_TasksAssigned_has_Employees_Employees1`
    FOREIGN KEY (`idEmployee`)
    REFERENCES `Employees` (`idEmployee`)
    ON DELETE CASCADE
    ON UPDATE CASCADE);


-- Populate Tables Ex.
-- INSERT INTO table_name (column1, column2, column3, ...)
-- VALUES (value1, value2, value3, ...);
-- Note: Turn off FK restrictions before inserting/running script, then turn back on after done


INSERT INTO `Parks`                 (parkName, parkDescription, parkLocation)
VALUES
('Jurassic World', 'Premier zoological theme park in the system. 500+ employees and 200+ assets.', 'Isla Nublar, Costa Rica'),
('Site B', 'Asset research and staging park. Limited facilities and employees.', 'Isla Sorna, Costa Rica'),
('Jurassic Park: San Diego', 'Urban zoological theme park. 200+ employees and 50+ assets.', 'San Diego, CA');


INSERT INTO `Facilities`            (idPark, idFacilityType, idHabitat, facilityName, facilityDescription, 
                                    facilityLocation, isEnclosure, securityRating, facilityPhoto, facilityNote)
VALUES

-- Note: Inserted habitat values are for assumed appropriate habitats, since that table has not been populated yet
-- For isEnclosure, an int value of 1 is true and a value of 0 is false - Not currently required but may need to change this.
(2, 5, 1, 'Wild Zone', 'Undeveloped area of Site B where assets can roam free until they need to be collected for transfer to a different facility.', 
'All of Sorna outside of the docks and laboratories.', 1, 10, NULL, "The island's natural terrain makes an impassible barrier for most assets to escape, 
and heavy-duty fencing/containment covers the gaps and protects other site facilities."),

-- NULL image until further investigation on uploading to database
(1, 1, NULL, 'Visitor Center', 'Primary Visitor Center for Jurassic World and general hub for visitor experiences.', 
'Central Isla Nublar, near ferry monorail drop-off.', 0, 8, NULL, "Can double as a shelter location in the event that an asset escapes containment. 
Doors and walls able to withstand most assets, but in the event of a category 9 or higher escape, visitors should be guided to the max security shelters."),

-- NULL image until further investigation on uploading to database
(3, 2, 2, 'Jurassic Stadium', 'Stadium viewing area for special biological asset exhibitions.', 
'Center of Jurassic Park San Diego.', 1, 10, NULL, "Both a large-scale visitor viewing area and a 
specialized enclosure for short-term viewing of a showcase asset."),

-- NULL image until further investigation on uploading to database
(3, 2, 2, 'Mosasaur Lagoon', 'Salt-water tank for the largest aquatic biological assets at Jurassic World.', 
'Adjacent to main street, down main path from the Visitor Center.', 1, 10, NULL, "Largest and most secure salt-water viewing tank in Jurassic World. 
Viewing facilities are adjacent.");


INSERT INTO `Employees`             (idJobClassification, firstName, lastName, hourlyWage, employeePhone, employeeEmail,
                                    employeeRadio, employeeNote, employeePhoto)
VALUES
(4, 'Robert', 'Muldoon', 35.00, '+1-202-555-0144', 'rmuldoon@jw.org', '200', 'Firearm certified.', NULL),
(3, 'Dennis', 'Nedry', 60.00, '+1-202-555-8073', 'dnedry@jw.org', NULL, 'Debt issues. Monitor behavior.', NULL),
(2, 'Ralph', 'Wiggum', 0.00, '+1-202-555-1989', 'mefailenglish@hotmail.com', '325', `Unpaid student intern. "I'm in danger!"`, NULL),
(1, 'Gerry', 'Harding', 40.00, '+1-202-555-1993', 'gharding@jw.org', '501', 'Medical certified.', NULL);


-- Note: Transport tasks are generated for the facility where the transport operation begins.
-- Datetime Format: 'YYYY-MM-DD HH:MI:SS.FFFFFFF' / Date is: YYYYMMDD
-- May want to switch datetime to date for maintainability
INSERT INTO `TasksAssigned`         (idFacility, idBiologicalAsset, taskDescription, taskStart, taskEnd, taskIsComplete)
VALUES
(1, 1, 'Sedate and transport asset to its new enclosure.', '2023-03-27', '2023-04-28', 1),
(2, NULL, 'FY2023 - Daily Visitor Center Cleaning', '2022-10-01', NULL, NULL),
(3, 2, 'Remove broken tooth from showcase asset at Jurassic Stadium.', '2023-03-01', '2023-03-30', 1),
(4, NULL, 'Repair leak in tank.', '2023-04-28', NULL, NULL);


INSERT INTO `EmployeeTasks`         (idTaskAssigned, idEmployee, taskHoursWorked, empTaskCost, empTaskStart, empTaskEnd)
VALUES
(1, 1, 40, 10000.00, '2023-04-04', '2023-04-25'),
(1, 4, 10, 5000.00, '2023-04-26', '2023-04-28'),
(2, 3, 160, 0.00, '2022-10-01', '2022-10-31'),
(3, 4, 10, 2000.00, '2023-03-30', '2023-03-30');


INSERT INTO `JobClassifications`    (jobTitle, jobDescription)
VALUES 
('Ranger', 'Caretaker that oversees day to day field care of biological assets. 
Conducts welfare checks, herds animals, and provides general on-the-spot assistance as needed.'),
('Maintenance Worker', 'Conducts facility upkeep tasks such as repair broken equipment/facilities, cleaning park grounds, inspecting facilities, etc.'),
('IT Specialist', 'Supports the technological backend of the complex computer-based aspects of maintaining park locations.'),
('ACU Operative', 'Animal Control Unit specialist charged with ensuring that biological assets do not escape containment 
and harm staff, visitors, or other assets. Firearms training required.');


INSERT INTO `FacilityTypes`         (facTypeName, facTypeDescription)
VALUES 
('General Structure', 'General facility intended for a variety of human uses.'),
('Ground Enclosure', 'Enclosure designed to contain land-based biological assets.'),
('Aquatic Enclosure', 'Enclosure designed to contain land-based (or amphibious) biological assets.'),
('Aviary Enclosure', 'Enclosure designed to contain avian biological assets.'),
('Undeveloped Area', 'Undeveloped area that is treated as a facility for organizational and reporting purposes.');


-- TO DO: Additional Table Inserts
INSERT INTO `Habitats`              ()
VALUES();


INSERT INTO `BiologicalAssets`      ()
VALUES();


INSERT INTO `Species`               ()
VALUES();


INSERT INTO `Diets`                 ()
VALUES();
